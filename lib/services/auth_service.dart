import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/foundation.dart';

class AuthService extends ChangeNotifier {
  final FirebaseAuth _firebaseAuth = FirebaseAuth.instance;

  User? get currentUser => _firebaseAuth.currentUser;

  AuthService() {
    _firebaseAuth.authStateChanges().listen((_) {
      notifyListeners(); // ‡πÅ‡∏à‡πâ‡∏á GoRouter ‡πÉ‡∏´‡πâ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä
    });
  }

  Stream<User?> get authStateChanges => _firebaseAuth.authStateChanges();

  Future<void> signIn({required String email, password}) async {
    await _firebaseAuth.signInWithEmailAndPassword(
      email: email,
      password: password,
    );
  }

  Future<void> register({
  required String email,
  required String password,
  required String displayName,
}) async {
  // ‡∏™‡∏°‡∏±‡∏Ñ‡∏£
  await _firebaseAuth.createUserWithEmailAndPassword(
    email: email,
    password: password,
  );

  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï displayName
  final user = currentUser;
  await user?.updateDisplayName(displayName);

  // ‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï reference
  await user?.reload();
  // üî• ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÇ‡∏´‡∏•‡∏î user ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤
 
  print('üîÑ UserName = $currentUser');
  // ‡πÅ‡∏à‡πâ‡∏á‡πÉ‡∏´‡πâ ‡πÅ‡∏•‡∏∞ GoRouter ‡∏£‡∏π‡πâ
  notifyListeners();
}

  Future<void> signOut() async {
    await _firebaseAuth.signOut();
  }
}

// ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ global ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡πÉ‡∏ô router
final authService = AuthService();
